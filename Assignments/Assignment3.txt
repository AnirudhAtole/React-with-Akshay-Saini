1) JSX
ans :-
Jsx is a HTML styled commands through which we can write code , which will be transpiled
through babel to React.createElement .

2) React.createElement vs JSX
ans :-
React.createElement is an Object , while JSX is a script like javascript code which 
would be later transpiled to createElement by babel.

3) Benefits of JSX
ans :-
Easy to use , we are able to write html code in js format 
hence easier and code readibility is easy also can use same 
code for again and again.

4) Behind the Scenes of JSX
ans :-
Behind JSX is transpiled into standard  js using babel .

5) Babel & parcel role in JSX
ans :-
parcel is used to bundle code , while parcel installs babel 
and being a transitive dependency it would transpile
JSX into standard code.

6) Components
ans :-
Components are react 

7) Functional Components
ans :- 
fucntion returning a react Component is called Functional Component.

Composing Components

8) What is JSX?
ans :- 
JSX is a HTML like code which is then transpiled into react.createElement .

9) Superpowers of JSX ?
ans :-
JSX is JS code so we can use attributes in JS syntax , it does
sanitization too hence we are free of sss attack.

10) Role of type attribute in script tag? What options can I use there?
ans :-



11) {TitleComponent} vs {<TitleComponent/>} vs {<TitleComponent></TitleComponent>} in JSX
ans :- {TitleComponent} means a variable or a js code is used there
{<TitleComponent />} means a JSX returning function or a functional Component is used 
{}
